var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AngularPowerSpectra","category":"page"},{"location":"#AngularPowerSpectra","page":"Home","title":"AngularPowerSpectra","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AngularPowerSpectra]","category":"page"},{"location":"#AngularPowerSpectra.SpectralVector","page":"Home","title":"AngularPowerSpectra.SpectralVector","text":"A SpectralArray is just a 0-based array.\n\n\n\n\n\n","category":"type"},{"location":"#AngularPowerSpectra.get_thread_buffers-Union{Tuple{T}, Tuple{Type{T},Any}} where T","page":"Home","title":"AngularPowerSpectra.get_thread_buffers","text":"Allocate Vector{T} of a given size for each thread.\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.mcm-Union{Tuple{T}, Tuple{SpectralWorkspace{T},AngularPowerSpectra.MapType,String,String}} where T","page":"Home","title":"AngularPowerSpectra.mcm","text":"Compute a mode-coupling matrix.\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.synalm!-Union{Tuple{T}, Tuple{Random.AbstractRNG,AbstractArray{T,3},Array{T,1} where T}} where T","page":"Home","title":"AngularPowerSpectra.synalm!","text":"synalm!([rng=GLOBAL_RNG], Cl::AbstractArray{T,3}, alms::Vector{Alm{Complex{T}}}) where T\n\nIn-place synthesis of spherical harmonic coefficients, given spectra.\n\nArguments:\n\nCl::AbstractArray{T,3}: array with dimensions of comp, comp, ℓ\nalms::Vector: array of Alm to fill\n\nExamples\n\nnside = 16\nC0 = [3.  2.;  2.  5.]\nCl = repeat(C0, 1, 1, 3nside)  # spectra constant with ℓ\nalms = [Alm{Complex{Float64}}(3nside-1, 3nside-1) for i in 1:2]\nsynalm!(Cl, alms)\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.synalm-Union{Tuple{T}, Tuple{Random.AbstractRNG,AbstractArray{T,3},Int64}} where T","page":"Home","title":"AngularPowerSpectra.synalm","text":"synalm([rng=GLOBAL_RNG], Cl::AbstractArray{T,3}, nside::Int) where T\n\nArguments:\n\nCl::AbstractArray{T,3}: array with dimensions of comp, comp, ℓ\nnside::Int: healpix resolution\n\nReturns:\n\nVector{Alm{T}}: spherical harmonics realizations for each component\n\nExamples\n\nnside = 16\nC0 = [3.  2.;  2.  5.]\nCl = repeat(C0, 1, 1, 3nside)  # spectra constant with ℓ\nalms = synalm(Cl, nside)\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.Ξ_EE-Union{Tuple{AA}, Tuple{T}, Tuple{OffsetArrays.OffsetArray{T,1,AA},WignerFamilies.WignerSymbolVector{T,Int64,AA} where AA<:AbstractArray{T,1},Int64,Int64}} where AA where T","page":"Home","title":"AngularPowerSpectra.Ξ_EE","text":"Projector function for EE. Goes into the mode-coupling matrix.\n\nNote that w3j² refers to the square of ( ℓ ℓ₂ ℓ₃ 0 -2 2 )\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.Ξ_TE-Union{Tuple{AA}, Tuple{T}, Tuple{OffsetArrays.OffsetArray{T,1,AA},WignerFamilies.WignerSymbolVector{T,Int64,AA} where AA<:AbstractArray{T,1},Int64,Int64}} where AA where T","page":"Home","title":"AngularPowerSpectra.Ξ_TE","text":"Projector function for TE. Goes into the mode-coupling matrix.\n\nNote that w3j₀₀₂₂ refers to ( ℓ ℓ₂ ℓ₃ 0 0 0 ) × ( ℓ ℓ₂ ℓ₃ 0 -2 2 )\n\n\n\n\n\n","category":"method"},{"location":"#AngularPowerSpectra.Ξ_TT-Union{Tuple{AA}, Tuple{T}, Tuple{OffsetArrays.OffsetArray{T,1,AA},WignerFamilies.WignerSymbolVector{T,Int64,AA} where AA<:AbstractArray{T,1},Int64,Int64}} where AA where T","page":"Home","title":"AngularPowerSpectra.Ξ_TT","text":"Projector function for TT. Goes into the mode-coupling matrix.\n\n\n\n\n\n","category":"method"},{"location":"#Base.setindex!-Union{Tuple{AA}, Tuple{T}, Tuple{Healpix.Alm{T,AA},Any,Int64,Int64}} where AA where T","page":"Home","title":"Base.setindex!","text":"convenience functions for interacting with Alm using a[ℓ, m] indices\n\n\n\n\n\n","category":"method"}]
}
